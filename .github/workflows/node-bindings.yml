name: Node.js Bindings Build

on:
  push:
    branches: [ main, develop, copilot/** ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-node-bindings:
    name: Build Node.js Bindings
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [16, 18, 20]
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
    
    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        # Xcode command line tools should be pre-installed
        xcode-select --install || true
    
    - name: Install npm dependencies
      run: |
        cd cpp/bindings/node
        npm install
    
    - name: Build bindings
      run: |
        cd cpp/bindings/node
        npm run install
    
    - name: Test bindings
      run: |
        cd cpp/bindings/node
        node index.js
    
    - name: Upload Node.js Bindings
      uses: actions/upload-artifact@v4
      with:
        name: node-bindings-${{ matrix.os }}-node${{ matrix.node-version }}
        path: cpp/bindings/node/build/Release/*.node
        retention-days: 7

  publish-npm:
    name: Publish to npm
    needs: build-node-bindings
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        registry-url: 'https://registry.npmjs.org'
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Prepare npm package
      run: |
        cd cpp/bindings/node
        npm install
        npm run install
    
    - name: Publish to npm
      run: |
        cd cpp/bindings/node
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      continue-on-error: true
